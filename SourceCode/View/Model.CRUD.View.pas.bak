unit Model.CRUD.View;

interface

uses
  Winapi.Windows, Winapi.Messages,
  System.SysUtils, System.Variants, System.Classes, System.UITypes,
  Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Base.Model.View, Vcl.Menus,
  Vcl.ExtCtrls, Vcl.TitleBarCtrls, Vcl.ComCtrls, Vcl.StdCtrls, Vcl.Buttons,
  System.Actions, Vcl.ActnList, Data.DB, Vcl.DBCtrls, Vcl.Grids, Vcl.DBGrids,
  Data.Win.ADODB;

type
  TModelCRUDView = class(TBaseModelView)
    StatusBar1: TStatusBar;
    TitleBarPanel1: TTitleBarPanel;
    CategoryPanelGroup1: TCategoryPanelGroup;
    CategoryPanel1: TCategoryPanel;
    BtnRecordUpdate: TButton;
    BtnRecordNew: TButton;
    BtnRecordDelete: TButton;
    CategoryPanel2: TCategoryPanel;
    BtnPrint: TButton;
    Panel1: TPanel;
    Label1: TLabel;
    Edit1: TEdit;
    BtnRecordFind: TButton;
    BtnClose: TButton;
    StatusBar2: TStatusBar;
    Panel2: TPanel;
    PgeCtrView: TPageControl;
    TabSht_ListRecords: TTabSheet;
    Action1: TAction;
    Action11: TMenuItem;
    Find1: TMenuItem;
    Update1: TMenuItem;
    N1: TMenuItem;
    Delete1: TMenuItem;
    N2: TMenuItem;
    Print1: TMenuItem;
    Print2: TMenuItem;
    DBGrid1: TDBGrid;
    DBNavigator1: TDBNavigator;
    DtaSrcModelCRUDView: TDataSource;
    TabSht_ListRecordsMasterDetail: TTabSheet;
    DBNavCRUDDetail: TDBNavigator;
    Splitter1: TSplitter;
    DBGrdCRUDDetail: TDBGrid;
    PnlCRUDMaster: TPanel;
    DBGrdCRUDMaster: TDBGrid;
    DBNavCRUDMaster: TDBNavigator;
    TabSht_FileRecord: TTabSheet;
    DtaSrcCRUDDetail: TDataSource;
    DtaSrcCRUDMaster: TDataSource;
    procedure ActRecordNewExecute(Sender: TObject);
    procedure ActRecordUpdateExecute(Sender: TObject);
    procedure ActRecordDeleteExecute(Sender: TObject);
    procedure ActRecordFindExecute(Sender: TObject);
    procedure DBGrid1TitleClick(Column: TColumn);
    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
    procedure DBGrdCRUDMasterTitleClick(Column: TColumn);
    procedure DBGrdCRUDDetailTitleClick(Column: TColumn);
    procedure FormCreate(Sender: TObject);
    procedure Edit1KeyPress(Sender: TObject; var Key: Char);
    procedure DBGrid1KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBGrdCRUDMasterKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure DBGrdCRUDDetailKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
  private
    { Private declarations }
    FSearchField:string;
    FColumnTitleClicked:string;
    FUseDataControls:Boolean;
    procedure DBGrid_TitleClick(Column: TColumn);
  published
    //
    procedure SetUseDataControls(Value:Boolean);

  public
    { Public declarations }
  end;

//var
//  ModelCRUDView: TModelCRUDView;

implementation

{$R *.dfm}

procedure TModelCRUDView.ActRecordDeleteExecute(Sender: TObject);
begin
  inherited;
  if MessageDlg('Delete record?',mtConfirmation,[mbYes, mbNo], 0, mbNo) = mrYes then
  begin
    if FUseDataControls then
      DtaSrcModelCRUDView.DataSet.Delete;
  end;
end;

procedure TModelCRUDView.ActRecordFindExecute(Sender: TObject);
var
  ValueSearch:Variant;
begin
  inherited;
  ValueSearch :=  Edit1.Text;

  if FSearchField = '' then
  begin
    ShowMessage('Click on title column on grid for select field for search.')
  end;

  //DtaSrcModelCRUDView.DataSet.Locate()
  //DtaSrcModelCRUDView.DataSet.Locate('name',Edit1.Text,[loCaseInsensitive,loPartialKey]);
  if PgeCtrView.ActivePageIndex = 0 then
  begin
    StatusBar1.SimpleText := Format('Search for [%s][%s][%s] Searching reacord...', [ FColumnTitleClicked, FSearchField, Edit1.Text]);
    if not DtaSrcModelCRUDView.DataSet.Locate(FSearchField, ValueSearch,[loCaseInsensitive,loPartialKey]) then
    begin
      StatusBar1.SimpleText := Format('Search for [%s][%s][%s] Record not found! ', [ FColumnTitleClicked, FSearchField, Edit1.Text]);
      MessageDlg('Record not found!',mtInformation,[mbOK], 0);
      StatusBar1.SimpleText := ''
    end;
    StatusBar1.SimpleText := Format('Search for [%s][%s][%s] Record found! ', [ FColumnTitleClicked, FSearchField, Edit1.Text]);
  end;

  if Edit1.CanFocus then
    Edit1.SetFocus;
end;


procedure TModelCRUDView.ActRecordNewExecute(Sender: TObject);
begin
  inherited;
  if FUseDataControls then
    DtaSrcModelCRUDView.DataSet.Insert;
end;

procedure TModelCRUDView.ActRecordUpdateExecute(Sender: TObject);
begin
  inherited;
//[dgTitles,dgIndicator,dgColumnResize,dgColLines,dgRowLines,dgTabs,dgRowSelect,dgConfirmDelete,dgCancelOnExit,dgTitleClick,dgTitleHotTrack]
  //DBGrid1.Options := DBGrid1.Options - [dgRowSelect];
  //DBGrid1.Options := DBGrid1.Options + [dgEditing];
  if FUseDataControls then
    DtaSrcModelCRUDView.DataSet.Edit;
end;

procedure TModelCRUDView.DBGrdCRUDDetailKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (Key = VK_DOWN) then
  begin
    with DBGrdCRUDDetail.DataSource do
    begin
      if (  DataSet.State = dsEdit) then
       DataSet.Post;
      DataSet.DisableControls;
      DataSet.Next;

      if DataSet.EOF then
        Key := 0
      else
        DataSet.Prior;
      DataSet.EnableControls;
    end;
  end;
end;

procedure TModelCRUDView.DBGrdCRUDDetailTitleClick(Column: TColumn);
begin
  inherited;
  DBGrid_TitleClick(Column);
end;

procedure TModelCRUDView.DBGrdCRUDMasterKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (Key = VK_DOWN) then
  begin
    with DBGrdCRUDMaster.DataSource do
    begin
      if (  DataSet.State = dsEdit) then
       DataSet.Post;
      DataSet.DisableControls;
      DataSet.Next;

      if DataSet.EOF then
        Key := 0
      else
        DataSet.Prior;
      DataSet.EnableControls;
    end;
  end;
end;

procedure TModelCRUDView.DBGrdCRUDMasterTitleClick(Column: TColumn);
begin
  inherited;
  DBGrid_TitleClick(Column);
end;

procedure TModelCRUDView.DBGrid1KeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
  inherited;
  if (Key = VK_DOWN) then
  begin
    with DBGrid1.DataSource do
    begin
      if (  DataSet.State = dsEdit) then
       DataSet.Post;
      DataSet.DisableControls;
      DataSet.Next;

      if DataSet.EOF then
        Key := 0
      else
        DataSet.Prior;
      DataSet.EnableControls;
    end;
  end;
end;

procedure TModelCRUDView.DBGrid1TitleClick(Column: TColumn);
begin
  inherited;
  DBGrid_TitleClick(Column);
end;

procedure TModelCRUDView.DBGrid_TitleClick(Column: TColumn);
begin
  FSearchField := Column.FieldName;
  FColumnTitleClicked := Column.Title.Caption;
  StatusBar1.SimpleText := Format('Search for [%s][%s]', [FColumnTitleClicked, FSearchField]);
end;


procedure TModelCRUDView.DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
begin
  inherited;
  {
  case Button of
    nbPost:
      begin
        DBGrid1.Options := DBGrid1.Options - [dgEditing];
        DBGrid1.Options := DBGrid1.Options + [dgRowSelect];
      end;
     }
end;



procedure TModelCRUDView.Edit1KeyPress(Sender: TObject; var Key: Char);
begin
  inherited;
  if key = #13 then
  begin
    BtnRecordFind.Click;
  end;
end;

procedure TModelCRUDView.FormCreate(Sender: TObject);
begin
  inherited;
  FUseDataControls := True;
end;

procedure TModelCRUDView.SetUseDataControls(Value: Boolean);
begin
  FUseDataControls := Value;
end;

end.
