unit Item.CRUD.View;

interface

uses
  Model.Item.Repository,
  Item.Entity,
  Model.CRUD.View,
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs,  Data.DB,
  System.Actions, Vcl.ActnList, Vcl.Menus, Vcl.DBCtrls, Vcl.Grids, Vcl.DBGrids,
  Vcl.ComCtrls, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.TitleBarCtrls, Data.Win.ADODB;

type
  TItemCRUDView = class(TModelCRUDView)
    procedure FormCreate(Sender: TObject);
    procedure ActRecordFindExecute(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

//var
//  ItemCRUDView: TItemCRUDView;

implementation

{$R *.dfm}

procedure TItemCRUDView.ActRecordFindExecute(Sender: TObject);
begin
  inherited;
  //if not DtaSrcModelCRUDView.DataSet.Locate('name', Edit1.Text,[loCaseInsensitive,loPartialKey]) then
  //   MessageDlg('Record not found!',mtInformation,[mbOK], 0);

//  if not DtaSrcModelCRUDView.DataSet.Locate('cod_product', Edit1.Text,[loCaseInsensitive,loPartialKey]) then
//     MessageDlg('Record not found!',mtInformation,[mbOK], 0);


end;

procedure TItemCRUDView.FormCreate(Sender: TObject);
begin
  FRepository := TModelItemRepository.New(TItem.Create);
//FRepository := TModelItemRepository.New(TItem(FEntity));
  inherited;

  PgeCtrView.ActivePage                     := TabSht_ListRecords;
  TabSht_ListRecordsMasterDetail.TabVisible := False;
  TabSht_FileRecord.TabVisible              := False;

  if Assigned(FRepository) then
    FRepository.List(DtaSrcModelCRUDView);
end;

end.
